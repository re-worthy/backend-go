// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package gen

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (
  username,
  'image',
  'password'
) VALUES (
  ?,
  ?,
  ?
)
RETURNING primary_currency, username, 'password', 'image', id, balance
`

type CreateUserParams struct {
	Username string
	Image    string
	Password string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser, arg.Username, arg.Image, arg.Password)
	var i User
	err := row.Scan(
		&i.PrimaryCurrency,
		&i.Username,
		&i.Password,
		&i.Image,
		&i.ID,
		&i.Balance,
	)
	return i, err
}

const getUser = `-- name: GetUser :one
SELECT primary_currency, username, 'password', 'image', id, balance FROM users where users.id = ?
`

func (q *Queries) GetUser(ctx context.Context, id int64) (User, error) {
	row := q.db.QueryRowContext(ctx, getUser, id)
	var i User
	err := row.Scan(
		&i.PrimaryCurrency,
		&i.Username,
		&i.Password,
		&i.Image,
		&i.ID,
		&i.Balance,
	)
	return i, err
}
